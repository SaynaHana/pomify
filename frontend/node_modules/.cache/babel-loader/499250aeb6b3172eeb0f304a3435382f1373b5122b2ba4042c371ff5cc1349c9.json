{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  // total time in seconds\n  // initial time is 25 minutes\n  const [time, setTime] = useState(1500);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(25);\n  function UpdateTime() {\n    // subtract a second from time\n    setTime(time => time - 1);\n\n    // now calculate the time in minutes and remaining seconds\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n  }\n\n  // start timer\n  // updates every 1 second\n  useEffect(() => {\n    // set interval\n    const interval = setInterval(() => {\n      UpdateTime();\n    }, 1000);\n\n    // clear interval\n    return () => clearInterval(interval);\n  }, [time, seconds, minutes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimerText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"5yvAsN3xHjIUu5yYXhWTb/7XAbo=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["TimerText","TimerButton","jsxDEV","_jsxDEV","Timer","_s","time","setTime","useState","seconds","setSeconds","minutes","setMinutes","UpdateTime","Math","floor","useEffect","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/Timer.js"],"sourcesContent":["import TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\nfunction Timer() {\n    // total time in seconds\n    // initial time is 25 minutes\n    const[time, setTime] = useState(1500);\n\n    const [seconds, setSeconds] = useState(0);\n    const [minutes, setMinutes] = useState(25);\n\n    function UpdateTime() {\n        // subtract a second from time\n        setTime(time => time - 1);\n\n        // now calculate the time in minutes and remaining seconds\n        setMinutes(Math.floor(time / 60))\n        setSeconds(time % 60);\n    }\n\n    // start timer\n    // updates every 1 second\n    useEffect(() => {\n        // set interval\n        const interval = setInterval(() => { \n            UpdateTime() \n        }, 1000);\n        \n        // clear interval\n        return () => clearInterval(interval);\n    }, [time, seconds, minutes]);\n\n    return (\n        <div>\n            <TimerText/>\n            <TimerButton/>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASK,UAAUA,CAAA,EAAG;IAClB;IACAN,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;;IAEzB;IACAM,UAAU,CAACE,IAAI,CAACC,KAAK,CAACT,IAAI,GAAG,EAAE,CAAC,CAAC;IACjCI,UAAU,CAACJ,IAAI,GAAG,EAAE,CAAC;EACzB;;EAEA;EACA;EACAU,SAAS,CAAC,MAAM;IACZ;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BL,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACX,IAAI,EAAEG,OAAO,EAAEE,OAAO,CAAC,CAAC;EAE5B,oBACIR,OAAA;IAAAiB,QAAA,gBACIjB,OAAA,CAACH,SAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACZrB,OAAA,CAACF,WAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd;AAACnB,EAAA,CAnCQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAqCd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}