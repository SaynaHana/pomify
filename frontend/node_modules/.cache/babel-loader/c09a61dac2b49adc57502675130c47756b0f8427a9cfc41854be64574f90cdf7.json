{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\n/*\n    Component for the timer\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const timer = useRef(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [timerText, setTimerText] = useState(\"Pause\");\n\n  /*\n      Updates the time left and calculates the minutes and seconds based on timeLeft\n  */\n  function UpdateTime() {\n    setTimeLeft(prevTimeLeft => {\n      const newTimeLeft = prevTimeLeft - 1;\n      setMinutes(Math.floor(timeLeft / 60));\n      setSeconds(timeLeft % 60);\n      return newTimeLeft;\n    });\n  }\n\n  /*\n      Starts/resumes the timer\n  */\n  function StartTimer() {\n    // if there is a timer already running, stop it first to prevent multiple timers\n    if (timer.current) {\n      PauseTimer();\n    }\n    timer.current = setInterval(() => {\n      UpdateTime();\n    }, 1000);\n  }\n\n  /*\n      Starts/resumes timer if timer is paused and pauses timer if timer is running\n  */\n  function ToggleTimer() {\n    console.log(timer.current);\n    if (timer.current !== null) {\n      console.log(1);\n      setTimerText(\"Start\");\n      PauseTimer();\n    } else {\n      console.log(2);\n      setTimerText(\"Pause\");\n      StartTimer();\n    }\n  }\n\n  /*\n      Clears the timer\n  */\n  function PauseTimer() {\n    clearInterval(timer.current);\n    timer.current = null;\n  }\n  useEffect(() => {\n    StartTimer();\n    return () => clearInterval(timer.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimerText, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n      text: timerText,\n      onClick: ToggleTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"75dar/leliww8hOG4Hu++ARctBM=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","useRef","TimerText","TimerButton","jsxDEV","_jsxDEV","Timer","_s","timer","timeLeft","setTimeLeft","minutes","setMinutes","seconds","setSeconds","timerText","setTimerText","UpdateTime","prevTimeLeft","newTimeLeft","Math","floor","StartTimer","current","PauseTimer","setInterval","ToggleTimer","console","log","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/Timer.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\n/*\n    Component for the timer\n*/\nfunction Timer() {\n    const timer = useRef(null);\n    const [timeLeft, setTimeLeft] = useState(1500);\n    const [minutes, setMinutes] = useState(25);\n    const [seconds, setSeconds] = useState(0);\n    const [timerText, setTimerText] = useState(\"Pause\")\n\n    /*\n        Updates the time left and calculates the minutes and seconds based on timeLeft\n    */\n    function UpdateTime() {\n        setTimeLeft((prevTimeLeft) => {\n            const newTimeLeft = prevTimeLeft - 1;\n            setMinutes(Math.floor(timeLeft / 60));\n            setSeconds(timeLeft % 60);\n            return newTimeLeft;\n        })        \n    }\n\n    /*\n        Starts/resumes the timer\n    */\n    function StartTimer() {\n        // if there is a timer already running, stop it first to prevent multiple timers\n        if(timer.current) {\n            PauseTimer();\n        }\n\n        timer.current = setInterval(() => {\n            UpdateTime();\n        }, 1000);\n    }\n\n    /*\n        Starts/resumes timer if timer is paused and pauses timer if timer is running\n    */\n    function ToggleTimer() {\n        console.log(timer.current);\n        if(timer.current !== null) {\n            console.log(1);\n            setTimerText(\"Start\");\n            PauseTimer();\n        }\n        else {\n            console.log(2);\n            setTimerText(\"Pause\");\n            StartTimer();\n        }\n    }\n\n    /*\n        Clears the timer\n    */\n    function PauseTimer() {\n        clearInterval(timer.current); \n        timer.current = null;\n    }\n\n    useEffect(() => {\n        StartTimer();\n        return () => clearInterval(timer.current);\n    }, []);\n\n    return (\n        <div>\n            <TimerText minutes={minutes} seconds={seconds}/>\n            <TimerButton text={timerText} onClick={ToggleTimer}/>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;;AAErB;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;;EAEnD;AACJ;AACA;EACI,SAASkB,UAAUA,CAAA,EAAG;IAClBP,WAAW,CAAEQ,YAAY,IAAK;MAC1B,MAAMC,WAAW,GAAGD,YAAY,GAAG,CAAC;MACpCN,UAAU,CAACQ,IAAI,CAACC,KAAK,CAACZ,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrCK,UAAU,CAACL,QAAQ,GAAG,EAAE,CAAC;MACzB,OAAOU,WAAW;IACtB,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;EACI,SAASG,UAAUA,CAAA,EAAG;IAClB;IACA,IAAGd,KAAK,CAACe,OAAO,EAAE;MACdC,UAAU,CAAC,CAAC;IAChB;IAEAhB,KAAK,CAACe,OAAO,GAAGE,WAAW,CAAC,MAAM;MAC9BR,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACZ;;EAEA;AACJ;AACA;EACI,SAASS,WAAWA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACe,OAAO,CAAC;IAC1B,IAAGf,KAAK,CAACe,OAAO,KAAK,IAAI,EAAE;MACvBI,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MACdZ,YAAY,CAAC,OAAO,CAAC;MACrBQ,UAAU,CAAC,CAAC;IAChB,CAAC,MACI;MACDG,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MACdZ,YAAY,CAAC,OAAO,CAAC;MACrBM,UAAU,CAAC,CAAC;IAChB;EACJ;;EAEA;AACJ;AACA;EACI,SAASE,UAAUA,CAAA,EAAG;IAClBK,aAAa,CAACrB,KAAK,CAACe,OAAO,CAAC;IAC5Bf,KAAK,CAACe,OAAO,GAAG,IAAI;EACxB;EAEAvB,SAAS,CAAC,MAAM;IACZsB,UAAU,CAAC,CAAC;IACZ,OAAO,MAAMO,aAAa,CAACrB,KAAK,CAACe,OAAO,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA,CAACH,SAAS;MAACS,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChD7B,OAAA,CAACF,WAAW;MAACgC,IAAI,EAAEpB,SAAU;MAACqB,OAAO,EAAEV;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd;AAAC3B,EAAA,CArEQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAuEd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}