{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/Timer.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s2();\n  var _s = $RefreshSig$();\n  // total time in seconds\n  // initial time is 25 minutes\n  const [time, setTime] = useState(1500);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(25);\n\n  // how often to update timer\n  const [delay, setDelay] = useState(1000);\n\n  // state to store if timer should countdown\n  const [isRunning, setIsRunning] = useState(true);\n  let interval = null;\n  function UpdateTime() {\n    // subtract a second from time\n    setTime(time => time - 1);\n\n    // now calculate the time in minutes and remaining seconds\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n  }\n  function ToggleIsRunning() {\n    setIsRunning(!isRunning);\n    if (isRunning) {\n      StartTimer();\n    } else {\n      StopTimer();\n    }\n  }\n  function InitTimer() {\n    _s();\n    // start timer\n    // updates every 1 second\n    useEffect(() => {\n      // set interval\n      interval = setInterval(() => {\n        UpdateTime();\n      }, 1000);\n\n      // clear interval\n      return () => clearInterval(interval);\n    }, [time, seconds, minutes]);\n  }\n  _s(InitTimer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  function StartTimer() {\n    interval = setInterval(() => {\n      UpdateTime();\n    }, 1000);\n  }\n  function StopTimer() {\n    if (interval != null) {\n      clearInterval(interval);\n    }\n  }\n  InitTimer();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimerText, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n      onClick: ToggleIsRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s2(Timer, \"+QXWCDhj+/84HsqD9Pov0wOwogk=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","TimerText","TimerButton","jsxDEV","_jsxDEV","Timer","_s2","_s","$RefreshSig$","time","setTime","seconds","setSeconds","minutes","setMinutes","delay","setDelay","isRunning","setIsRunning","interval","UpdateTime","Math","floor","ToggleIsRunning","StartTimer","StopTimer","InitTimer","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/Timer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\nfunction Timer() {\n    // total time in seconds\n    // initial time is 25 minutes\n    const[time, setTime] = useState(1500);\n\n    const [seconds, setSeconds] = useState(0);\n    const [minutes, setMinutes] = useState(25);\n\n    // how often to update timer\n    const [delay, setDelay] = useState(1000);\n\n    // state to store if timer should countdown\n    const [isRunning, setIsRunning] = useState(true);\n\n    let interval = null;\n\n    function UpdateTime() {\n        // subtract a second from time\n        setTime(time => time - 1);\n\n        // now calculate the time in minutes and remaining seconds\n        setMinutes(Math.floor(time / 60))\n        setSeconds(time % 60);\n    }\n\n    function ToggleIsRunning() {\n        setIsRunning(!isRunning);\n\n        if(isRunning) {\n            StartTimer();\n        }\n        else {\n            StopTimer();\n        }\n    }\n\n    function InitTimer() {\n        // start timer\n        // updates every 1 second\n        useEffect(() => {\n            // set interval\n            interval = setInterval(() => { \n                UpdateTime() \n            }, 1000);\n            \n            // clear interval\n            return () => clearInterval(interval);\n        }, [time, seconds, minutes]);\n    }\n\n    function StartTimer() {\n        interval = setInterval(() => { \n            UpdateTime() \n        }, 1000);\n    }\n\n    function StopTimer() {\n        if(interval != null) {\n            clearInterval(interval);\n        }\n    }\n\n    InitTimer();\n\n\n    return (\n        <div>\n            <TimerText minutes={minutes} seconds={seconds}/>\n            <TimerButton onClick={ToggleIsRunning}/>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb;EACA;EACA,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEhD,IAAIoB,QAAQ,GAAG,IAAI;EAEnB,SAASC,UAAUA,CAAA,EAAG;IAClB;IACAV,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;;IAEzB;IACAK,UAAU,CAACO,IAAI,CAACC,KAAK,CAACb,IAAI,GAAG,EAAE,CAAC,CAAC;IACjCG,UAAU,CAACH,IAAI,GAAG,EAAE,CAAC;EACzB;EAEA,SAASc,eAAeA,CAAA,EAAG;IACvBL,YAAY,CAAC,CAACD,SAAS,CAAC;IAExB,IAAGA,SAAS,EAAE;MACVO,UAAU,CAAC,CAAC;IAChB,CAAC,MACI;MACDC,SAAS,CAAC,CAAC;IACf;EACJ;EAEA,SAASC,SAASA,CAAA,EAAG;IAAAnB,EAAA;IACjB;IACA;IACAP,SAAS,CAAC,MAAM;MACZ;MACAmB,QAAQ,GAAGQ,WAAW,CAAC,MAAM;QACzBP,UAAU,CAAC,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,OAAO,MAAMQ,aAAa,CAACT,QAAQ,CAAC;IACxC,CAAC,EAAE,CAACV,IAAI,EAAEE,OAAO,EAAEE,OAAO,CAAC,CAAC;EAChC;EAACN,EAAA,CAZQmB,SAAS;EAclB,SAASF,UAAUA,CAAA,EAAG;IAClBL,QAAQ,GAAGQ,WAAW,CAAC,MAAM;MACzBP,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACZ;EAEA,SAASK,SAASA,CAAA,EAAG;IACjB,IAAGN,QAAQ,IAAI,IAAI,EAAE;MACjBS,aAAa,CAACT,QAAQ,CAAC;IAC3B;EACJ;EAEAO,SAAS,CAAC,CAAC;EAGX,oBACItB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA,CAACH,SAAS;MAACY,OAAO,EAAEA,OAAQ;MAACF,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChD7B,OAAA,CAACF,WAAW;MAACgC,OAAO,EAAEX;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAAC3B,GAAA,CAvEQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAyEd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}