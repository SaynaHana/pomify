{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [time, setTime] = useState(1500);\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [running, setRunning] = useState(false);\n  const interval = useRef();\n  function UpdateTime() {\n    // decrement time\n    setTime(time => time - 1);\n\n    // calculate minutes and seconds\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n  }\n  useEffect(() => {\n    interval.current = setInterval(() => {\n      UpdateTime();\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TimerText, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"oY8KNUFACkqMuh0Y64nKPbuuJ04=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","useRef","TimerText","TimerButton","jsxDEV","_jsxDEV","Timer","_s","time","setTime","minutes","setMinutes","seconds","setSeconds","running","setRunning","interval","UpdateTime","Math","floor","current","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/Timer.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\nfunction Timer() {\n    const [time, setTime] = useState(1500);\n    const [minutes, setMinutes] = useState(25);\n    const [seconds, setSeconds] = useState(0);\n    const [running, setRunning] = useState(false);\n    const interval = useRef();\n\n    function UpdateTime() {\n        // decrement time\n        setTime((time) => time - 1);\n\n        // calculate minutes and seconds\n        setMinutes(Math.floor(time / 60));\n        setSeconds(time % 60);\n    }\n\n    useEffect(() => {\n        interval.current = setInterval(() => {\n            UpdateTime();\n        }, 1000);\n\n        return () => clearInterval(interval);\n    });\n\n    return (\n        <div>\n            <TimerText minutes={minutes} seconds={seconds}/>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMiB,QAAQ,GAAGf,MAAM,CAAC,CAAC;EAEzB,SAASgB,UAAUA,CAAA,EAAG;IAClB;IACAR,OAAO,CAAED,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;;IAE3B;IACAG,UAAU,CAACO,IAAI,CAACC,KAAK,CAACX,IAAI,GAAG,EAAE,CAAC,CAAC;IACjCK,UAAU,CAACL,IAAI,GAAG,EAAE,CAAC;EACzB;EAEAR,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACI,OAAO,GAAGC,WAAW,CAAC,MAAM;MACjCJ,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMK,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,CAAC;EAEF,oBACIX,OAAA;IAAAkB,QAAA,eACIlB,OAAA,CAACH,SAAS;MAACQ,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACpB,EAAA,CA7BQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA+Bd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}