{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/TimerText.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./../App.css\";\n\n// total time in seconds\n// initial time is 25 minutes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [time, setTime] = useState(1500);\nconst [seconds, setSeconds] = useState(0);\nconst [minutes, setMinutes] = useState(25);\nfunction TimerText() {\n  _s();\n  function UpdateTime() {\n    // subtract a second from time\n    setTime(time => time - 1);\n\n    // now calculate the time in minutes and remaining seconds\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n  }\n\n  // start timer\n  // updates every 1 second\n  useEffect(() => {\n    // set interval\n    const interval = setInterval(() => {\n      UpdateTime();\n    }, 1000);\n\n    // clear interval\n    return () => clearInterval(interval);\n  }, [time, seconds, minutes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: minutes + \":\" + String(seconds).padStart(2, \"0\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(TimerText, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TimerText;\nexport default TimerText;\nvar _c;\n$RefreshReg$(_c, \"TimerText\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","time","setTime","seconds","setSeconds","minutes","setMinutes","TimerText","_s","UpdateTime","Math","floor","interval","setInterval","clearInterval","children","String","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/TimerText.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./../App.css\";\n\n// total time in seconds\n// initial time is 25 minutes\nconst[time, setTime] = useState(1500);\n\nconst [seconds, setSeconds] = useState(0);\nconst [minutes, setMinutes] = useState(25);\n\nfunction TimerText() {\n    function UpdateTime() {\n        // subtract a second from time\n        setTime(time => time - 1);\n\n        // now calculate the time in minutes and remaining seconds\n        setMinutes(Math.floor(time / 60))\n        setSeconds(time % 60);\n    }\n\n    // start timer\n    // updates every 1 second\n    useEffect(() => {\n        // set interval\n        const interval = setInterval(() => { \n            UpdateTime() \n        }, 1000);\n        \n        // clear interval\n        return () => clearInterval(interval);\n    }, [time, seconds, minutes]);\n\n\n    return(\n        <div>\n            <h1>{minutes + \":\" + String(seconds).padStart(2, \"0\")}</h1>\n        </div>\n    );\n}\n\nexport default TimerText;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,cAAc;;AAErB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;AAErC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;AACzC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;AAE1C,SAASU,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,SAASC,UAAUA,CAAA,EAAG;IAClB;IACAP,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;;IAEzB;IACAK,UAAU,CAACI,IAAI,CAACC,KAAK,CAACV,IAAI,GAAG,EAAE,CAAC,CAAC;IACjCG,UAAU,CAACH,IAAI,GAAG,EAAE,CAAC;EACzB;;EAEA;EACA;EACAH,SAAS,CAAC,MAAM;IACZ;IACA,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BJ,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMK,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACX,IAAI,EAAEE,OAAO,EAAEE,OAAO,CAAC,CAAC;EAG5B,oBACIL,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAAe,QAAA,EAAKV,OAAO,GAAG,GAAG,GAAGW,MAAM,CAACb,OAAO,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAE,GAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd;AAACb,EAAA,CA5BQD,SAAS;AAAAe,EAAA,GAATf,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}