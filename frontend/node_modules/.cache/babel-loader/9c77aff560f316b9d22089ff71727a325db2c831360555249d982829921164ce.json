{"ast":null,"code":"var _jsxFileName = \"/home/aria/source/pomodoro/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  // total time in seconds\n  // initial time is 25 minutes\n  const [time, setTime] = useState(1500);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(25);\n\n  // how often to update timer\n  const [delay, setDelay] = useState(1000);\n\n  // state to store if timer should countdown\n  const [isRunning, setIsRunning] = useState(true);\n  const [timer, setTimer] = useState(null);\n  function UpdateTime() {\n    // subtract a second from time\n    setTime(time => time - 1);\n    console.log(time);\n\n    // now calculate the time in minutes and remaining seconds\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n  }\n  function ToggleIsRunning() {\n    setIsRunning(!isRunning);\n  }\n  useEffect(() => {\n    setTimer(setInterval(() => {\n      if (isRunning) {\n        UpdateTime();\n      }\n    }, delay));\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TimerText, {\n      minutes: minutes,\n      seconds: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerButton, {\n      onClick: ToggleIsRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"RqR6a+CcIpgrPeXeahL0YFmKMr0=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","TimerText","TimerButton","jsxDEV","_jsxDEV","Timer","_s","time","setTime","seconds","setSeconds","minutes","setMinutes","delay","setDelay","isRunning","setIsRunning","timer","setTimer","UpdateTime","console","log","Math","floor","ToggleIsRunning","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/aria/source/pomodoro/src/components/Timer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TimerText from \"./TimerText\";\nimport TimerButton from \"./TimerButton\";\nimport \"./../App.css\";\n\nfunction Timer() {\n    // total time in seconds\n    // initial time is 25 minutes\n    const[time, setTime] = useState(1500);\n\n    const [seconds, setSeconds] = useState(0);\n    const [minutes, setMinutes] = useState(25);\n\n    // how often to update timer\n    const [delay, setDelay] = useState(1000);\n\n    // state to store if timer should countdown\n    const [isRunning, setIsRunning] = useState(true);\n    const [timer, setTimer] = useState(null);\n\n\n    function UpdateTime() {\n        // subtract a second from time\n        setTime(time => time - 1);\n\n        console.log(time);\n\n        // now calculate the time in minutes and remaining seconds\n        setMinutes(Math.floor(time / 60))\n        setSeconds(time % 60);\n    }\n\n    function ToggleIsRunning() {\n        setIsRunning(!isRunning);\n    }\n\n    useEffect(() => {\n        setTimer(setInterval(() => {\n            if(isRunning) {\n                UpdateTime();\n            }\n        }, delay));\n    }, [ isRunning ]);\n\n    return (\n        <div>\n            <TimerText minutes={minutes} seconds={seconds}/>\n            <TimerButton onClick={ToggleIsRunning}/>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAGxC,SAASoB,UAAUA,CAAA,EAAG;IAClB;IACAX,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAEzBa,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;;IAEjB;IACAK,UAAU,CAACU,IAAI,CAACC,KAAK,CAAChB,IAAI,GAAG,EAAE,CAAC,CAAC;IACjCG,UAAU,CAACH,IAAI,GAAG,EAAE,CAAC;EACzB;EAEA,SAASiB,eAAeA,CAAA,EAAG;IACvBR,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B;EAEAf,SAAS,CAAC,MAAM;IACZkB,QAAQ,CAACO,WAAW,CAAC,MAAM;MACvB,IAAGV,SAAS,EAAE;QACVI,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC,EAAEN,KAAK,CAAC,CAAC;EACd,CAAC,EAAE,CAAEE,SAAS,CAAE,CAAC;EAEjB,oBACIX,OAAA;IAAAsB,QAAA,gBACItB,OAAA,CAACH,SAAS;MAACU,OAAO,EAAEA,OAAQ;MAACF,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChD1B,OAAA,CAACF,WAAW;MAAC6B,OAAO,EAAEP;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAACxB,EAAA,CA7CQD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA+Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}